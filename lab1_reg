# 1. Imports necessários
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import PolynomialFeatures
from sklearn.metrics import mean_squared_error, r2_score

# 2. Upload do arquivo Excel
from google.colab import files
uploaded = files.upload()

# 3. Carregando os dados
df = pd.read_csv('boston.csv')

# 4. Separando as variaveis
X = df.drop('medv', axis=1) # variáveis explicativas
y = df['medv'] # variável alvo

# 5. Dividindo os dados em treino e teste
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# 6. Fazendo a regressão linear
modelo_linear = LinearRegression()
modelo_linear.fit(X_train, y_train)
y_pred_linear = modelo_linear.predict(X_test)
mse_linear = mean_squared_error(y_test, y_pred_linear)
r2_linear = r2_score(y_test, y_pred_linear)

# 7. Fazendo a regressão polinomial (grau 2)
poly = PolynomialFeatures(degree=2)
X_poly = poly.fit_transform(X)
X_poly_train, X_poly_test, y_poly_train, y_poly_test = train_test_split(X_poly, y, test_size=0.2, random_state=42)
modelo_poly = LinearRegression()
modelo_poly.fit(X_poly_train, y_poly_train)
y_pred_poly = modelo_poly.predict(X_poly_test)
mse_poly = mean_squared_error(y_poly_test, y_pred_poly)
r2_poly = r2_score(y_poly_test, y_pred_poly)

# 8. Exibindo as métricas
print("=== Regressão Linear ===")
print("MSE:", mse_linear)
print("R²:", r2_linear)
print("\n=== Regressão Polinomial (grau 2) ===")
print("MSE:", mse_poly)
print("R²:", r2_poly)

